version: '2.0'
services:
  prometheus:
#    privileged: true
#    restart: always
    image: prom/prometheus
    container_name: prometheus-server
    networks:
      network_macvlan: 
        ipv4_address: 192.168.0.29
      backend:
    ports:
      - 9090:9090
    volumes:
      - ./config:/etc/prometheus
      - ./data:/prometheus
    entrypoint: /bin/prometheus 
    command: 
      - --config.file=/etc/prometheus/prometheus.yml 
      - --web.config.file=/etc/prometheus/web.yml 
      - --storage.tsdb.path=/prometheus 


  alertmanager:
    image: prom/alertmanager
    container_name: prometheus-alert
    networks:
      network_macvlan: 
        ipv4_address: 192.168.0.30
      backend:
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alert-config:/config
      - ./alert-data:/data
    command: 
      - --config.file=/config/alertmanager.yml 
      - --log.level=debug


  node-exporter:
    privileged: true
    image: prom/node-exporter
    container_name: prometheus-node
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks: 
      - backend
    ports:
      - 9100:9100
    restart: always
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  grafana:
    image: grafana/grafana-enterprise
    container_name: prometheus-grafana
    networks:
      network_macvlan: 
        ipv4_address: 192.168.0.31
      backend:
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/etc/grafana/
      - ./grafana-data:/var/lib/grafana

networks:
  network_macvlan:
    name: network00
    external: true
  backend:
    name: prometheus_network
    driver: bridge

